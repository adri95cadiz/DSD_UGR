/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _ASOCIACION_H_RPCGEN
#define _ASOCIACION_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif

#define TAMA 128

typedef int ID;

typedef char *Key;

typedef char *Content;

typedef struct Elemento *ElementoPtr;

typedef struct Lista *ListaPtr;

enum State {
	VALIDO = 0,
	ERROR = 1,
	SUSTITUIDO = 2,
	NOENCONTRADO = 3,
};
typedef enum State State;

struct Elemento {
	ID id;
	Key key;
	Content content;
	ElementoPtr sig;
};
typedef struct Elemento Elemento;

struct Lista {
	ID id;
	Key key;
	ListaPtr sig;
	ElementoPtr first;
};
typedef struct Lista Lista;

struct ResultElemento {
	State state;
	union {
		Content content;
	} ResultElemento_u;
};
typedef struct ResultElemento ResultElemento;

struct ResultLista {
	State state;
	union {
		ElementoPtr elemPtr;
	} ResultLista_u;
};
typedef struct ResultLista ResultLista;

struct datos_nueva_asociacion {
	ID id;
	Key key;
	Content content;
};
typedef struct datos_nueva_asociacion datos_nueva_asociacion;

struct datos_asociacion {
	ID id;
	Key key;
};
typedef struct datos_asociacion datos_asociacion;

#define LISTAASOCIACIONES 0x20000001
#define LISTA_ASOCIACIONES_VERSION 1

#if defined(__STDC__) || defined(__cplusplus)
#define ponerAsociacion 1
extern  State * ponerasociacion_1(datos_nueva_asociacion *, CLIENT *);
extern  State * ponerasociacion_1_svc(datos_nueva_asociacion *, struct svc_req *);
#define obtenerAsociacion 2
extern  ResultElemento * obtenerasociacion_1(datos_asociacion *, CLIENT *);
extern  ResultElemento * obtenerasociacion_1_svc(datos_asociacion *, struct svc_req *);
#define borrarAsociacion 3
extern  State * borrarasociacion_1(datos_asociacion *, CLIENT *);
extern  State * borrarasociacion_1_svc(datos_asociacion *, struct svc_req *);
#define enumerar 4
extern  ResultLista * enumerar_1(ID *, CLIENT *);
extern  ResultLista * enumerar_1_svc(ID *, struct svc_req *);
extern int listaasociaciones_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define ponerAsociacion 1
extern  State * ponerasociacion_1();
extern  State * ponerasociacion_1_svc();
#define obtenerAsociacion 2
extern  ResultElemento * obtenerasociacion_1();
extern  ResultElemento * obtenerasociacion_1_svc();
#define borrarAsociacion 3
extern  State * borrarasociacion_1();
extern  State * borrarasociacion_1_svc();
#define enumerar 4
extern  ResultLista * enumerar_1();
extern  ResultLista * enumerar_1_svc();
extern int listaasociaciones_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_ID (XDR *, ID*);
extern  bool_t xdr_Key (XDR *, Key*);
extern  bool_t xdr_Content (XDR *, Content*);
extern  bool_t xdr_ElementoPtr (XDR *, ElementoPtr*);
extern  bool_t xdr_ListaPtr (XDR *, ListaPtr*);
extern  bool_t xdr_State (XDR *, State*);
extern  bool_t xdr_Elemento (XDR *, Elemento*);
extern  bool_t xdr_Lista (XDR *, Lista*);
extern  bool_t xdr_ResultElemento (XDR *, ResultElemento*);
extern  bool_t xdr_ResultLista (XDR *, ResultLista*);
extern  bool_t xdr_datos_nueva_asociacion (XDR *, datos_nueva_asociacion*);
extern  bool_t xdr_datos_asociacion (XDR *, datos_asociacion*);

#else /* K&R C */
extern bool_t xdr_ID ();
extern bool_t xdr_Key ();
extern bool_t xdr_Content ();
extern bool_t xdr_ElementoPtr ();
extern bool_t xdr_ListaPtr ();
extern bool_t xdr_State ();
extern bool_t xdr_Elemento ();
extern bool_t xdr_Lista ();
extern bool_t xdr_ResultElemento ();
extern bool_t xdr_ResultLista ();
extern bool_t xdr_datos_nueva_asociacion ();
extern bool_t xdr_datos_asociacion ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_ASOCIACION_H_RPCGEN */
