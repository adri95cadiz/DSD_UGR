/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _DNS_H_RPCGEN
#define _DNS_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif

#define MAX_STRING 30

typedef char *str_t;

struct machine {
	str_t name;
	str_t net;
	str_t ip;
};
typedef struct machine machine;

#define DNSPROG 0x3012225
#define DNSVERS 1

#if defined(__STDC__) || defined(__cplusplus)
#define DNS1 1
extern  str_t * dns1_1(machine *, CLIENT *);
extern  str_t * dns1_1_svc(machine *, struct svc_req *);
extern int dnsprog_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define DNS1 1
extern  str_t * dns1_1();
extern  str_t * dns1_1_svc();
extern int dnsprog_1_freeresult ();
#endif /* K&R C */

#define DNSPROG2 0x3012226
#define DNSVERS 1

#if defined(__STDC__) || defined(__cplusplus)
#define DNS2 1
extern  str_t * dns2_1(machine *, CLIENT *);
extern  str_t * dns2_1_svc(machine *, struct svc_req *);
extern int dnsprog2_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define DNS2 1
extern  str_t * dns2_1();
extern  str_t * dns2_1_svc();
extern int dnsprog2_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_str_t (XDR *, str_t*);
extern  bool_t xdr_machine (XDR *, machine*);

#else /* K&R C */
extern bool_t xdr_str_t ();
extern bool_t xdr_machine ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_DNS_H_RPCGEN */
